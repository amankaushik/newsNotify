/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.17
 *
 * Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtBluetooth.h"

#line 28 "/home/amankaushik/pyProjects/newsnotify/PyQt/sip/QtBluetooth/qbluetoothuuid.sip"
#include <qbluetoothuuid.h>
#line 29 "/home/amankaushik/pyProjects/newsnotify/PyQt/QtBluetooth/sipQtBluetoothQBluetoothUuid.cpp"

#line 24 "/home/amankaushik/pyProjects/newsnotify/PyQt/sip/QtBluetooth/qpybluetooth_quint128.sip"
#include <qbluetoothuuid.h>
#line 33 "/home/amankaushik/pyProjects/newsnotify/PyQt/QtBluetooth/sipQtBluetoothQBluetoothUuid.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 36 "/home/amankaushik/pyProjects/newsnotify/PyQt/QtBluetooth/sipQtBluetoothQBluetoothUuid.cpp"
#line 26 "sip/QtCore/quuid.sip"
#include <quuid.h>
#line 39 "/home/amankaushik/pyProjects/newsnotify/PyQt/QtBluetooth/sipQtBluetoothQBluetoothUuid.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 42 "/home/amankaushik/pyProjects/newsnotify/PyQt/QtBluetooth/sipQtBluetoothQBluetoothUuid.cpp"


PyDoc_STRVAR(doc_QBluetoothUuid_minimumSize, "QBluetoothUuid.minimumSize() -> int");

extern "C" {static PyObject *meth_QBluetoothUuid_minimumSize(PyObject *, PyObject *);}
static PyObject *meth_QBluetoothUuid_minimumSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QBluetoothUuid *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QBluetoothUuid, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->minimumSize();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBluetoothUuid, sipName_minimumSize, doc_QBluetoothUuid_minimumSize);

    return NULL;
}


PyDoc_STRVAR(doc_QBluetoothUuid_toUInt16, "QBluetoothUuid.toUInt16() -> (int, bool)");

extern "C" {static PyObject *meth_QBluetoothUuid_toUInt16(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QBluetoothUuid_toUInt16(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        const QBluetoothUuid *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QBluetoothUuid, &sipCpp))
        {
            quint16 sipRes;

            sipRes = sipCpp->toUInt16(&a0);

            return sipBuildResult(0,"(tb)",sipRes,a0);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBluetoothUuid, sipName_toUInt16, doc_QBluetoothUuid_toUInt16);

    return NULL;
}


PyDoc_STRVAR(doc_QBluetoothUuid_toUInt32, "QBluetoothUuid.toUInt32() -> (int, bool)");

extern "C" {static PyObject *meth_QBluetoothUuid_toUInt32(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QBluetoothUuid_toUInt32(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        const QBluetoothUuid *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QBluetoothUuid, &sipCpp))
        {
            quint32 sipRes;

            sipRes = sipCpp->toUInt32(&a0);

            return sipBuildResult(0,"(ub)",sipRes,a0);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBluetoothUuid, sipName_toUInt32, doc_QBluetoothUuid_toUInt32);

    return NULL;
}


PyDoc_STRVAR(doc_QBluetoothUuid_toUInt128, "QBluetoothUuid.toUInt128() -> 16-tuple-of-int");

extern "C" {static PyObject *meth_QBluetoothUuid_toUInt128(PyObject *, PyObject *);}
static PyObject *meth_QBluetoothUuid_toUInt128(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QBluetoothUuid *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QBluetoothUuid, &sipCpp))
        {
            quint128*sipRes;

            sipRes = new quint128(sipCpp->toUInt128());

            return sipConvertFromNewType(sipRes,sipType_quint128,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBluetoothUuid, sipName_toUInt128, doc_QBluetoothUuid_toUInt128);

    return NULL;
}


extern "C" {static PyObject *slot_QBluetoothUuid___ne__(PyObject *,PyObject *);}
static PyObject *slot_QBluetoothUuid___ne__(PyObject *sipSelf,PyObject *sipArg)
{
    QBluetoothUuid *sipCpp = reinterpret_cast<QBluetoothUuid *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QBluetoothUuid));

    if (!sipCpp)
        return 0;

    PyObject *sipParseErr = NULL;

    {
        const QBluetoothUuid* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QBluetoothUuid, &a0))
        {
            bool sipRes;

            sipRes = !sipCpp->QBluetoothUuid::operator==(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth,ne_slot,sipType_QBluetoothUuid,sipSelf,sipArg);
}


extern "C" {static PyObject *slot_QBluetoothUuid___eq__(PyObject *,PyObject *);}
static PyObject *slot_QBluetoothUuid___eq__(PyObject *sipSelf,PyObject *sipArg)
{
    QBluetoothUuid *sipCpp = reinterpret_cast<QBluetoothUuid *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QBluetoothUuid));

    if (!sipCpp)
        return 0;

    PyObject *sipParseErr = NULL;

    {
        const QBluetoothUuid* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QBluetoothUuid, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->QBluetoothUuid::operator==(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth,eq_slot,sipType_QBluetoothUuid,sipSelf,sipArg);
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QBluetoothUuid(void *, const sipTypeDef *);}
static void *cast_QBluetoothUuid(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QBluetoothUuid)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QUuid)->ctd_cast((QUuid *)(QBluetoothUuid *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QBluetoothUuid(void *, int);}
static void release_QBluetoothUuid(void *sipCppV,int)
{
    delete reinterpret_cast<QBluetoothUuid *>(sipCppV);
}


extern "C" {static void assign_QBluetoothUuid(void *, SIP_SSIZE_T, const void *);}
static void assign_QBluetoothUuid(void *sipDst, SIP_SSIZE_T sipDstIdx, const void *sipSrc)
{
    reinterpret_cast<QBluetoothUuid *>(sipDst)[sipDstIdx] = *reinterpret_cast<const QBluetoothUuid *>(sipSrc);
}


extern "C" {static void *array_QBluetoothUuid(SIP_SSIZE_T);}
static void *array_QBluetoothUuid(SIP_SSIZE_T sipNrElem)
{
    return new QBluetoothUuid[sipNrElem];
}


extern "C" {static void *copy_QBluetoothUuid(const void *, SIP_SSIZE_T);}
static void *copy_QBluetoothUuid(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QBluetoothUuid(reinterpret_cast<const QBluetoothUuid *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QBluetoothUuid(sipSimpleWrapper *);}
static void dealloc_QBluetoothUuid(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_QBluetoothUuid(sipGetAddress(sipSelf),0);
    }
}


extern "C" {static void *init_type_QBluetoothUuid(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QBluetoothUuid(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    QBluetoothUuid *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            sipCpp = new QBluetoothUuid();

            return sipCpp;
        }
    }

    {
        quint32 a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "u", &a0))
        {
            sipCpp = new QBluetoothUuid(a0);

            return sipCpp;
        }
    }

    {
        quint128* a0;
        int a0State = 0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J1", sipType_quint128,&a0, &a0State))
        {
            sipCpp = new QBluetoothUuid(*a0);
            sipReleaseType(a0,sipType_quint128,a0State);

            return sipCpp;
        }
    }

    {
        const QString* a0;
        int a0State = 0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J1", sipType_QString,&a0, &a0State))
        {
            sipCpp = new QBluetoothUuid(*a0);
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            return sipCpp;
        }
    }

    {
        const QBluetoothUuid* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_QBluetoothUuid, &a0))
        {
            sipCpp = new QBluetoothUuid(*a0);

            return sipCpp;
        }
    }

    {
        const QUuid* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_QUuid, &a0))
        {
            sipCpp = new QBluetoothUuid(*a0);

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QBluetoothUuid[] = {{278, 0, 1}};


/* Define this type's Python slots. */
static sipPySlotDef slots_QBluetoothUuid[] = {
    {(void *)slot_QBluetoothUuid___ne__, ne_slot},
    {(void *)slot_QBluetoothUuid___eq__, eq_slot},
    {0, (sipPySlotType)0}
};


static PyMethodDef methods_QBluetoothUuid[] = {
    {SIP_MLNAME_CAST(sipName_minimumSize), meth_QBluetoothUuid_minimumSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QBluetoothUuid_minimumSize)},
    {SIP_MLNAME_CAST(sipName_toUInt128), meth_QBluetoothUuid_toUInt128, METH_VARARGS, SIP_MLDOC_CAST(doc_QBluetoothUuid_toUInt128)},
    {SIP_MLNAME_CAST(sipName_toUInt16), (PyCFunction)meth_QBluetoothUuid_toUInt16, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QBluetoothUuid_toUInt16)},
    {SIP_MLNAME_CAST(sipName_toUInt32), (PyCFunction)meth_QBluetoothUuid_toUInt32, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QBluetoothUuid_toUInt32)}
};

static sipEnumMemberDef enummembers_QBluetoothUuid[] = {
    {sipName_AV_RemoteControl, static_cast<int>(QBluetoothUuid::AV_RemoteControl), 46},
    {sipName_AV_RemoteControlController, static_cast<int>(QBluetoothUuid::AV_RemoteControlController), 46},
    {sipName_AV_RemoteControlTarget, static_cast<int>(QBluetoothUuid::AV_RemoteControlTarget), 46},
    {sipName_AdvancedAudioDistribution, static_cast<int>(QBluetoothUuid::AdvancedAudioDistribution), 46},
    {sipName_Att, static_cast<int>(QBluetoothUuid::Att), 45},
    {sipName_AudioSink, static_cast<int>(QBluetoothUuid::AudioSink), 46},
    {sipName_AudioSource, static_cast<int>(QBluetoothUuid::AudioSource), 46},
    {sipName_Avctp, static_cast<int>(QBluetoothUuid::Avctp), 45},
    {sipName_Avdtp, static_cast<int>(QBluetoothUuid::Avdtp), 45},
    {sipName_BasicImage, static_cast<int>(QBluetoothUuid::BasicImage), 46},
    {sipName_BasicPrinting, static_cast<int>(QBluetoothUuid::BasicPrinting), 46},
    {sipName_Bnep, static_cast<int>(QBluetoothUuid::Bnep), 45},
    {sipName_BrowseGroupDescriptor, static_cast<int>(QBluetoothUuid::BrowseGroupDescriptor), 46},
    {sipName_Cmtp, static_cast<int>(QBluetoothUuid::Cmtp), 45},
    {sipName_DialupNetworking, static_cast<int>(QBluetoothUuid::DialupNetworking), 46},
    {sipName_DirectPrinting, static_cast<int>(QBluetoothUuid::DirectPrinting), 46},
    {sipName_DirectPrintingReferenceObjectsService, static_cast<int>(QBluetoothUuid::DirectPrintingReferenceObjectsService), 46},
    {sipName_Display3D, static_cast<int>(QBluetoothUuid::Display3D), 46},
    {sipName_Ftp, static_cast<int>(QBluetoothUuid::Ftp), 45},
    {sipName_GN, static_cast<int>(QBluetoothUuid::GN), 46},
    {sipName_GNSS, static_cast<int>(QBluetoothUuid::GNSS), 46},
    {sipName_GNSSServer, static_cast<int>(QBluetoothUuid::GNSSServer), 46},
    {sipName_GenericAudio, static_cast<int>(QBluetoothUuid::GenericAudio), 46},
    {sipName_GenericFileTransfer, static_cast<int>(QBluetoothUuid::GenericFileTransfer), 46},
    {sipName_GenericNetworking, static_cast<int>(QBluetoothUuid::GenericNetworking), 46},
    {sipName_GenericTelephony, static_cast<int>(QBluetoothUuid::GenericTelephony), 46},
    {sipName_Glasses3D, static_cast<int>(QBluetoothUuid::Glasses3D), 46},
    {sipName_HCRPrint, static_cast<int>(QBluetoothUuid::HCRPrint), 46},
    {sipName_HCRScan, static_cast<int>(QBluetoothUuid::HCRScan), 46},
    {sipName_HDP, static_cast<int>(QBluetoothUuid::HDP), 46},
    {sipName_HDPSink, static_cast<int>(QBluetoothUuid::HDPSink), 46},
    {sipName_HDPSource, static_cast<int>(QBluetoothUuid::HDPSource), 46},
    {sipName_Handsfree, static_cast<int>(QBluetoothUuid::Handsfree), 46},
    {sipName_HandsfreeAudioGateway, static_cast<int>(QBluetoothUuid::HandsfreeAudioGateway), 46},
    {sipName_HardcopyCableReplacement, static_cast<int>(QBluetoothUuid::HardcopyCableReplacement), 46},
    {sipName_HardcopyControlChannel, static_cast<int>(QBluetoothUuid::HardcopyControlChannel), 45},
    {sipName_HardcopyDataChannel, static_cast<int>(QBluetoothUuid::HardcopyDataChannel), 45},
    {sipName_HardcopyNotification, static_cast<int>(QBluetoothUuid::HardcopyNotification), 45},
    {sipName_Headset, static_cast<int>(QBluetoothUuid::Headset), 46},
    {sipName_HeadsetAG, static_cast<int>(QBluetoothUuid::HeadsetAG), 46},
    {sipName_HeadsetHS, static_cast<int>(QBluetoothUuid::HeadsetHS), 46},
    {sipName_Hidp, static_cast<int>(QBluetoothUuid::Hidp), 45},
    {sipName_Http, static_cast<int>(QBluetoothUuid::Http), 45},
    {sipName_HumanInterfaceDeviceService, static_cast<int>(QBluetoothUuid::HumanInterfaceDeviceService), 46},
    {sipName_ImagingAutomaticArchive, static_cast<int>(QBluetoothUuid::ImagingAutomaticArchive), 46},
    {sipName_ImagingReferenceObjects, static_cast<int>(QBluetoothUuid::ImagingReferenceObjects), 46},
    {sipName_ImagingResponder, static_cast<int>(QBluetoothUuid::ImagingResponder), 46},
    {sipName_Ip, static_cast<int>(QBluetoothUuid::Ip), 45},
    {sipName_IrMCSync, static_cast<int>(QBluetoothUuid::IrMCSync), 46},
    {sipName_IrMCSyncCommand, static_cast<int>(QBluetoothUuid::IrMCSyncCommand), 46},
    {sipName_L2cap, static_cast<int>(QBluetoothUuid::L2cap), 45},
    {sipName_LANAccessUsingPPP, static_cast<int>(QBluetoothUuid::LANAccessUsingPPP), 46},
    {sipName_MPSProfile, static_cast<int>(QBluetoothUuid::MPSProfile), 46},
    {sipName_MPSService, static_cast<int>(QBluetoothUuid::MPSService), 46},
    {sipName_McapControlChannel, static_cast<int>(QBluetoothUuid::McapControlChannel), 45},
    {sipName_McapDataChannel, static_cast<int>(QBluetoothUuid::McapDataChannel), 45},
    {sipName_MessageAccessProfile, static_cast<int>(QBluetoothUuid::MessageAccessProfile), 46},
    {sipName_MessageAccessServer, static_cast<int>(QBluetoothUuid::MessageAccessServer), 46},
    {sipName_MessageNotificationServer, static_cast<int>(QBluetoothUuid::MessageNotificationServer), 46},
    {sipName_NAP, static_cast<int>(QBluetoothUuid::NAP), 46},
    {sipName_OBEXFileTransfer, static_cast<int>(QBluetoothUuid::OBEXFileTransfer), 46},
    {sipName_Obex, static_cast<int>(QBluetoothUuid::Obex), 45},
    {sipName_ObexObjectPush, static_cast<int>(QBluetoothUuid::ObexObjectPush), 46},
    {sipName_PANU, static_cast<int>(QBluetoothUuid::PANU), 46},
    {sipName_PhonebookAccess, static_cast<int>(QBluetoothUuid::PhonebookAccess), 46},
    {sipName_PhonebookAccessPCE, static_cast<int>(QBluetoothUuid::PhonebookAccessPCE), 46},
    {sipName_PhonebookAccessPSE, static_cast<int>(QBluetoothUuid::PhonebookAccessPSE), 46},
    {sipName_PnPInformation, static_cast<int>(QBluetoothUuid::PnPInformation), 46},
    {sipName_PrintingStatus, static_cast<int>(QBluetoothUuid::PrintingStatus), 46},
    {sipName_PublicBrowseGroup, static_cast<int>(QBluetoothUuid::PublicBrowseGroup), 46},
    {sipName_ReferencePrinting, static_cast<int>(QBluetoothUuid::ReferencePrinting), 46},
    {sipName_ReflectedUI, static_cast<int>(QBluetoothUuid::ReflectedUI), 46},
    {sipName_Rfcomm, static_cast<int>(QBluetoothUuid::Rfcomm), 45},
    {sipName_SIMAccess, static_cast<int>(QBluetoothUuid::SIMAccess), 46},
    {sipName_Sdp, static_cast<int>(QBluetoothUuid::Sdp), 45},
    {sipName_SerialPort, static_cast<int>(QBluetoothUuid::SerialPort), 46},
    {sipName_ServiceDiscoveryServer, static_cast<int>(QBluetoothUuid::ServiceDiscoveryServer), 46},
    {sipName_Synchronization3D, static_cast<int>(QBluetoothUuid::Synchronization3D), 46},
    {sipName_Tcp, static_cast<int>(QBluetoothUuid::Tcp), 45},
    {sipName_TcsAt, static_cast<int>(QBluetoothUuid::TcsAt), 45},
    {sipName_TcsBin, static_cast<int>(QBluetoothUuid::TcsBin), 45},
    {sipName_UdiCPlain, static_cast<int>(QBluetoothUuid::UdiCPlain), 45},
    {sipName_Udp, static_cast<int>(QBluetoothUuid::Udp), 45},
    {sipName_Upnp, static_cast<int>(QBluetoothUuid::Upnp), 45},
    {sipName_VideoDistribution, static_cast<int>(QBluetoothUuid::VideoDistribution), 46},
    {sipName_VideoSink, static_cast<int>(QBluetoothUuid::VideoSink), 46},
    {sipName_VideoSource, static_cast<int>(QBluetoothUuid::VideoSource), 46},
    {sipName_Wsp, static_cast<int>(QBluetoothUuid::Wsp), 45},
};

PyDoc_STRVAR(doc_QBluetoothUuid, "\1QBluetoothUuid()\n"
    "QBluetoothUuid(int)\n"
    "QBluetoothUuid(16-tuple-of-int)\n"
    "QBluetoothUuid(str)\n"
    "QBluetoothUuid(QBluetoothUuid)\n"
    "QBluetoothUuid(QUuid)");


pyqt5ClassTypeDef sipTypeDef_QtBluetooth_QBluetoothUuid = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QBluetoothUuid,
        {0}
    },
    {
        sipNameNr_QBluetoothUuid,
        {0, 0, 1},
        4, methods_QBluetoothUuid,
        88, enummembers_QBluetoothUuid,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QBluetoothUuid,
    -1,
    -1,
    supers_QBluetoothUuid,
    slots_QBluetoothUuid,
    init_type_QBluetoothUuid,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QBluetoothUuid,
    assign_QBluetoothUuid,
    array_QBluetoothUuid,
    copy_QBluetoothUuid,
    release_QBluetoothUuid,
    cast_QBluetoothUuid,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0,
    0
};
